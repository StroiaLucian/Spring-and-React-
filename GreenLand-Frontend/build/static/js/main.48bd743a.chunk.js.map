{"version":3,"sources":["commons/styles/project-style.css","commons/api/rest-client.js","commons/images/icon.png","commons/images/future-medicine.jpg","serviceWorker.js","navigation-bar.js","home/home.js","commons/errorhandling/api-response-error-message.js","person/components/validators/person-validators.js","commons/hosts.js","person/api/person-api.js","person/components/person-form.js","commons/tables/fields/Field.js","commons/tables/table.js","person/components/person-table.js","person/person-container.js","commons/errorhandling/error-page.js","app.js","index.js"],"names":["module","exports","body","dropdown","pagetitle","generalcontainer","divBtn","home","chartdisplay","background-image","back","titleSubtitleContainer","errorTitle","errorText","subtitle","cardLabelContainer","cardLabel","cardSubtitle","charttitle","paragraph","title","search","next","leftUpCorner","leftDownCorner","chartTitle","chartLabel","rightAllignelement","leftAllignelement","rowDisplay","referencePricesGraphDisplay","middleAllign","container","parentOf2Tables","leftCorner","rightCorner","columnDisplayDayAhead","monitoredDataTable","placeOrderButton","tablesInRow","rowStyle","marginForColumn","cardMargin","rightPositionedTable","tableColors","performRequest","request","callback","fetch","then","response","ok","json","status","err","catch","__webpack_require__","p","Boolean","window","location","hostname","match","textStyle","color","textDecoration","NavigationBar","react_default","a","createElement","Navbar","light","expand","NavbarBrand","href","src","logo","width","height","Nav","className","navbar","UncontrolledDropdown","nav","inNavbar","DropdownToggle","style","caret","DropdownMenu","right","DropdownItem","NavLink","backgroundStyle","backgroundPosition","backgroundSize","backgroundRepeat","backgroundImage","concat","BackgroundImg","Home","Jumbotron","fluid","Container","Button","onClick","open","React","Component","APIResponseErrorMessage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleForm","bind","assertThisInitialized","state","error","errorStatus","collapseForm","setState","UncontrolledAlert","Modal","isOpen","toggle","ModalHeader","styles","ModalBody","Row","Col","xs","timestamp","resource","message","path","details","ModalFooter","minLengthValidator","value","minLength","length","requiredValidator","trim","emailValidator","test","String","toLowerCase","validate","rules","isValid","rule","HOST","backend_api","endpoint","person","PersonForm","handleChange","event","name","target","updatedControls","formControls","updatedFormElement","touched","valid","validationRules","formIsValid","updatedFormElementName","reloadHandler","placeholder","isRequired","email","age","address","handleSubmit","_this2","user","Request","method","headers","Accept","Content-Type","JSON","stringify","console","log","url","RestApiClient","API_USERS","result","registerPerson","FormGroup","id","Label","for","Input","onChange","defaultValue","required","min","max","type","sm","size","offset","esm_Button","disabled","api_response_error_message","Field","focused","locked","label","_this$state","_this$props","fieldClassName","onFocus","onBlur","htmlFor","defaultProps","Table","data","columns","filters","getTrPropsFunction","getTrProps","pageSize","accepted","forEach","val","accessor","includes","index","header","undefined","forceUpdate","rowInfo","textAlign","filter","esm_Row","map","esm_Col","key","Field_Field","e","es","resolveData","row","defaultPageSize","getTRPropsType","showPagination","Header","PersonTable","tableData","table","PersonContainer","reload","selected","isLoaded","fetchPersons","CardHeader","Card","person_table","person_form","ErrorPage","App","BrowserRouter","navigation_bar","Switch","Route","exact","render","person_container","error_page","ReactDOM","app","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.48bd743a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"UmJTOWSKy-HWmq-pqcHSd\",\"dropdown\":\"OT6E0rQDwmYzRLXCAUQQL\",\"pagetitle\":\"_10gn_egFV0u_9FAQ-43RG8\",\"generalcontainer\":\"_32L1Km8TUeW2wspK9pBSNz\",\"divBtn\":\"_1H5wCjHSqqeCXePXcWr2OP\",\"home\":\"_2eWXD4KoeYTh6kD5Zi0jff\",\"chartdisplay\":\"_23TadnH-Fh8ri1xSnX1Nro\",\"background-image\":\"_3jtU7X0aqwCK7t6M-Kp5Dt\",\"back\":\"_3YJstcmoC95Hq_tUL00gh1\",\"titleSubtitleContainer\":\"_3YdExw9ZxfkuKDaa17fqdJ\",\"errorTitle\":\"_3SjkQ8ZsbAiryOLaxETcrO\",\"errorText\":\"_1-Z1MGBzc1Ii7atRt7qcHr\",\"subtitle\":\"_3YSLKa4uecff4aQYd6S9_U\",\"cardLabelContainer\":\"_23x2SpqFJfaZ0KrIot-SFd\",\"cardLabel\":\"_3UW1R88s9peKLlT8XFvB3U\",\"cardSubtitle\":\"_2R0ixKhJM99iY30bqVeCFs\",\"charttitle\":\"_2Q8KE0dYSXJ6xOHvF6sNBw\",\"paragraph\":\"_1FYq7n6DwPDyT6kbAfVzV_\",\"title\":\"_30JskIh9rUAubzlT1G9KNR\",\"search\":\"_3a9o_1bU32au1uNKUNMDGW\",\"next\":\"_1tkoANHxcaA-uSJZoUagxy\",\"leftUpCorner\":\"_3NjWuXTcABoZ6GzYVsklZ0\",\"leftDownCorner\":\"yy9xV12Sw9be3gumtuG9c\",\"chartTitle\":\"tNrF7b-E9hMVXuZlz1ZAy\",\"chartLabel\":\"_3IMygTlrtbXL2fpNA9SoRw\",\"rightAllignelement\":\"_234jviSlXnpoecIAntBa22\",\"leftAllignelement\":\"G5lLFygu5nkaau5UX1WiS\",\"rowDisplay\":\"_3D8Dn_wWy7xxFBnkxU-RiX\",\"referencePricesGraphDisplay\":\"_3TDN9g8sLxMT078ZXvMOyC\",\"middleAllign\":\"_35wMg31hNhXxXOkyGOmxv2\",\"container\":\"_1n4LUy54iUi-TOuMvg5saa\",\"parentOf2Tables\":\"_2zL712TIp25lFXUY_r0tmB\",\"leftCorner\":\"_1vxLJhH9Rl6pZZHeeFd5dL\",\"rightCorner\":\"_2HwB7Fx5qbOtXcoEiBaygr\",\"columnDisplayDayAhead\":\"_1VVMr-dxnOPd0_XdFYKqgr\",\"monitoredDataTable\":\"_2qONaV7IqbnLZl7I_e0FIc\",\"placeOrderButton\":\"_2SmJC1igVSU_DWvPMxrXvq\",\"tablesInRow\":\"_2FLSqbYJNL4ybTvgTnhf_L\",\"rowStyle\":\"_1GYT0O2FXzJKlLehY8ro32\",\"marginForColumn\":\"crwkUCVA2fI8cvyANKy3U\",\"cardMargin\":\"_1-9Zmul-SJhol8Dy7f8RoL\",\"rightPositionedTable\":\"Gen3C7pDBY0z2q0eABd5W\",\"tableColors\":\"AKsKyx4e_s3LCPHFANNCf\"};","function performRequest(request, callback){\r\n    fetch(request)\r\n        .then(\r\n            function(response) {\r\n                if (response.ok) {\r\n                    response.json().then(json => callback(json, response.status,null));\r\n                }\r\n                else {\r\n                    response.json().then(err => callback(null, response.status,  err));\r\n                }\r\n            })\r\n        .catch(function (err) {\r\n            //catch any other unexpected error, and set custom code for error = 1\r\n            callback(null, 1, err)\r\n        });\r\n}\r\n\r\nmodule.exports = {\r\n    performRequest\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/icon.63ee281c.png\";","module.exports = __webpack_public_path__ + \"static/media/future-medicine.5706134d.jpg\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and person)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              console.log('Content is cached for offline use.');\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport logo from './commons/images/icon.png';\r\n\r\nimport {\r\n    DropdownItem,\r\n    DropdownMenu,\r\n    DropdownToggle,\r\n    Nav,\r\n    Navbar,\r\n    NavbarBrand,\r\n    NavLink,\r\n    UncontrolledDropdown\r\n} from 'reactstrap';\r\n\r\nconst textStyle = {\r\n    color: 'white',\r\n    textDecoration: 'none'\r\n};\r\n\r\nconst NavigationBar = () => (\r\n    <div>\r\n        <Navbar color=\"dark\" light expand=\"md\">\r\n            <NavbarBrand href=\"/\">\r\n                <img src={logo} width={\"50\"}\r\n                     height={\"35\"} />\r\n            </NavbarBrand>\r\n            <Nav className=\"mr-auto\" navbar>\r\n\r\n                <UncontrolledDropdown nav inNavbar>\r\n                    <DropdownToggle style={textStyle} nav caret>\r\n                       Menu\r\n                    </DropdownToggle>\r\n                    <DropdownMenu right >\r\n\r\n                        <DropdownItem>\r\n                            <NavLink href=\"/person\">Persons</NavLink>\r\n                        </DropdownItem>\r\n\r\n\r\n                    </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n\r\n            </Nav>\r\n        </Navbar>\r\n    </div>\r\n);\r\n\r\nexport default NavigationBar\r\n","import React from 'react';\r\n\r\nimport BackgroundImg from '../commons/images/future-medicine.jpg';\r\n\r\nimport {Button, Container, Jumbotron} from 'reactstrap';\r\n\r\nconst backgroundStyle = {\r\n    backgroundPosition: 'center',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    width: \"100%\",\r\n    height: \"1920px\",\r\n    backgroundImage: `url(${BackgroundImg})`\r\n};\r\nconst textStyle = {color: 'white', };\r\n\r\nclass Home extends React.Component {\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div>\r\n                <Jumbotron fluid style={backgroundStyle}>\r\n                    <Container fluid>\r\n                        <h1 className=\"display-3\" style={textStyle}>Integrated Medical Monitoring Platform for Home-care assistance</h1>\r\n                        <p className=\"lead\" style={textStyle}> <b>Enabling real time monitoring of patients, remote-assisted care services and\r\n                            smart intake mechanism for prescribed medication.</b> </p>\r\n                        <hr className=\"my-2\"/>\r\n                        <p  style={textStyle}> <b>This assignment represents the first module of the distributed software system \"Integrated\r\n                            Medical Monitoring Platform for Home-care assistance that represents the final project\r\n                            for the Distributed Systems course. </b> </p>\r\n                        <p className=\"lead\">\r\n                            <Button color=\"primary\" onClick={() => window.open('http://coned.utcluj.ro/~salomie/DS_Lic/')}>Learn\r\n                                More</Button>\r\n                        </p>\r\n                    </Container>\r\n                </Jumbotron>\r\n\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport {Button, Col, Modal, ModalBody, ModalFooter, ModalHeader, Row, UncontrolledAlert} from 'reactstrap';\r\nimport styles from '../styles/project-style.css';\r\n\r\nclass APIResponseErrorMessage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggleForm = this.toggleForm.bind(this);\r\n        this.state = {\r\n            error: this.props.error,\r\n            errorStatus: this.props.errorStatus,\r\n            collapseForm: false\r\n        }\r\n    }\r\n    toggleForm() {\r\n        this.setState({collapseForm: !this.state.collapseForm});\r\n    }\r\n    render()\r\n    {\r\n        return (\r\n            <div>\r\n\r\n                <UncontrolledAlert color=\"danger\">\r\n                    An unexpected error occurred on the server side!\r\n                    { this.state.errorStatus > 1 && <Button color=\"link\"  onClick={this.toggleForm}>Details...</Button>}\r\n                </UncontrolledAlert>\r\n\r\n                { this.state.errorStatus > 1 &&\r\n                <Modal isOpen={this.state.collapseForm} toggle={this.toggleForm}\r\n                       className={this.props.className}>\r\n                    <ModalHeader toggle={this.toggleForm} className={styles.errorTitle}> Server side error information: </ModalHeader>\r\n                    <ModalBody>\r\n                        <Row>\r\n                            <Col xs=\"3\"> Time: </Col>   <Col xs=\"auto\" className={styles.errorText}>{ this.state.error.timestamp} </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs=\"3\"> Resource : </Col>   <Col xs=\"auto\" className={styles.errorText}>{ this.state.error.resource} </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs=\"3\"> Error : </Col>   <Col xs=\"auto\" className={styles.errorText}>{ this.state.error.status} - { this.state.error.error} </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs=\"3\"> Message : </Col>   <Col xs=\"auto\" className={styles.errorText}>{ this.state.error.message} </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs=\"3\"> Path : </Col>   <Col xs=\"auto\" className={styles.errorText}>{ this.state.error.path} </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs=\"3\"> Details : </Col>   <Col xs=\"auto\" className={styles.errorText}>\r\n                            {this.state.error.details}\r\n                        </Col>\r\n                        </Row>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"danger\" onClick={this.toggleForm}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Modal>}\r\n            </div>\r\n        )\r\n    }}\r\nexport default APIResponseErrorMessage\r\n\r\n","\r\nconst minLengthValidator = (value, minLength) => {\r\n    return value.length >= minLength;\r\n};\r\n\r\nconst requiredValidator = value => {\r\n    return value.trim() !== '';\r\n};\r\n\r\nconst emailValidator = value => {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(value).toLowerCase());\r\n};\r\n\r\nconst validate = (value, rules) => {\r\n    let isValid = true;\r\n\r\n    for (let rule in rules) {\r\n\r\n        switch (rule) {\r\n            case 'minLength': isValid = isValid && minLengthValidator(value, rules[rule]);\r\n                              break;\r\n\r\n            case 'isRequired': isValid = isValid && requiredValidator(value);\r\n                               break;\r\n\r\n            case 'emailValidator': isValid = isValid && emailValidator(value);\r\n                                   break;\r\n\r\n            default: isValid = true;\r\n        }\r\n\r\n    }\r\n\r\n    return isValid;\r\n};\r\n\r\nexport default validate;\r\n","export const HOST = {\r\n    backend_api: 'http://localhost:8080',\r\n};\r\n","import {HOST} from '../../commons/hosts';\r\nimport RestApiClient from \"../../commons/api/rest-client\";\r\n\r\n\r\nconst endpoint = {\r\n    person: '/person'\r\n};\r\n\r\nfunction getPersons(callback) {\r\n    let request = new Request(HOST.backend_api + endpoint.person, {\r\n        method: 'GET',\r\n    });\r\n    console.log(request.url);\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\n\r\nfunction getPersonById(params, callback){\r\n    let request = new Request(HOST.backend_api + endpoint.person + params.id, {\r\n       method: 'GET'\r\n    });\r\n\r\n    console.log(request.url);\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\n\r\nfunction postPerson(user, callback){\r\n    let request = new Request(HOST.backend_api + endpoint.person , {\r\n        method: 'POST',\r\n        headers : {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(user)\r\n    });\r\n\r\n    console.log(\"URL: \" + request.url);\r\n\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\n\r\nexport {\r\n    getPersons,\r\n    getPersonById,\r\n    postPerson\r\n};\r\n","import React from 'react';\r\nimport validate from \"./validators/person-validators\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport * as API_USERS from \"../api/person-api\";\r\nimport APIResponseErrorMessage from \"../../commons/errorhandling/api-response-error-message\";\r\nimport {Col, Row} from \"reactstrap\";\r\nimport { FormGroup, Input, Label} from 'reactstrap';\r\n\r\n\r\n\r\nclass PersonForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggleForm = this.toggleForm.bind(this);\r\n        this.reloadHandler = this.props.reloadHandler;\r\n\r\n        this.state = {\r\n\r\n            errorStatus: 0,\r\n            error: null,\r\n\r\n            formIsValid: false,\r\n\r\n            formControls: {\r\n                name: {\r\n                    value: '',\r\n                    placeholder: 'What is your name?...',\r\n                    valid: false,\r\n                    touched: false,\r\n                    validationRules: {\r\n                        minLength: 3,\r\n                        isRequired: true\r\n                    }\r\n                },\r\n                email: {\r\n                    value: '',\r\n                    placeholder: 'Email...',\r\n                    valid: false,\r\n                    touched: false,\r\n                    validationRules: {\r\n                        emailValidator: true\r\n                    }\r\n                },\r\n                age: {\r\n                    value: '',\r\n                    placeholder: 'Age...',\r\n                    valid: false,\r\n                    touched: false,\r\n                },\r\n                address: {\r\n                    value: '',\r\n                    placeholder: 'Cluj, Zorilor, Str. Lalelelor 21...',\r\n                    valid: false,\r\n                    touched: false,\r\n                },\r\n            }\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleForm() {\r\n        this.setState({collapseForm: !this.state.collapseForm});\r\n    }\r\n\r\n\r\n    handleChange = event => {\r\n\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        const updatedControls = this.state.formControls;\r\n\r\n        const updatedFormElement = updatedControls[name];\r\n\r\n        updatedFormElement.value = value;\r\n        updatedFormElement.touched = true;\r\n        updatedFormElement.valid = validate(value, updatedFormElement.validationRules);\r\n        updatedControls[name] = updatedFormElement;\r\n\r\n        let formIsValid = true;\r\n        for (let updatedFormElementName in updatedControls) {\r\n            formIsValid = updatedControls[updatedFormElementName].valid && formIsValid;\r\n        }\r\n\r\n        this.setState({\r\n            formControls: updatedControls,\r\n            formIsValid: formIsValid\r\n        });\r\n\r\n    };\r\n\r\n    registerPerson(person) {\r\n        return API_USERS.postPerson(person, (result, status, error) => {\r\n            if (result !== null && (status === 200 || status === 201)) {\r\n                console.log(\"Successfully inserted person with id: \" + result);\r\n                this.reloadHandler();\r\n            } else {\r\n                this.setState(({\r\n                    errorStatus: status,\r\n                    error: error\r\n                }));\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSubmit() {\r\n        let person = {\r\n            name: this.state.formControls.name.value,\r\n            email: this.state.formControls.email.value,\r\n            age: this.state.formControls.age.value,\r\n            address: this.state.formControls.address.value\r\n        };\r\n\r\n        console.log(person);\r\n        this.registerPerson(person);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <FormGroup id='name'>\r\n                    <Label for='nameField'> Name: </Label>\r\n                    <Input name='name' id='nameField' placeholder={this.state.formControls.name.placeholder}\r\n                           onChange={this.handleChange}\r\n                           defaultValue={this.state.formControls.name.value}\r\n                           touched={this.state.formControls.name.touched? 1 : 0}\r\n                           valid={this.state.formControls.name.valid}\r\n                           required\r\n                    />\r\n                    {this.state.formControls.name.touched && !this.state.formControls.name.valid &&\r\n                    <div className={\"error-message row\"}> * Name must have at least 3 characters </div>}\r\n                </FormGroup>\r\n\r\n                <FormGroup id='email'>\r\n                    <Label for='emailField'> Email: </Label>\r\n                    <Input name='email' id='emailField' placeholder={this.state.formControls.email.placeholder}\r\n                           onChange={this.handleChange}\r\n                           defaultValue={this.state.formControls.email.value}\r\n                           touched={this.state.formControls.email.touched? 1 : 0}\r\n                           valid={this.state.formControls.email.valid}\r\n                           required\r\n                    />\r\n                    {this.state.formControls.email.touched && !this.state.formControls.email.valid &&\r\n                    <div className={\"error-message\"}> * Email must have a valid format</div>}\r\n                </FormGroup>\r\n\r\n                <FormGroup id='address'>\r\n                    <Label for='addressField'> Address: </Label>\r\n                    <Input name='address' id='addressField' placeholder={this.state.formControls.address.placeholder}\r\n                           onChange={this.handleChange}\r\n                           defaultValue={this.state.formControls.address.value}\r\n                           touched={this.state.formControls.address.touched? 1 : 0}\r\n                           valid={this.state.formControls.address.valid}\r\n                           required\r\n                    />\r\n                </FormGroup>\r\n\r\n                <FormGroup id='age'>\r\n                    <Label for='ageField'> Age: </Label>\r\n                    <Input name='age' id='ageField' placeholder={this.state.formControls.age.placeholder}\r\n                           min={0} max={100} type=\"number\"\r\n                           onChange={this.handleChange}\r\n                           defaultValue={this.state.formControls.age.value}\r\n                           touched={this.state.formControls.age.touched? 1 : 0}\r\n                           valid={this.state.formControls.age.valid}\r\n                           required\r\n                    />\r\n                </FormGroup>\r\n\r\n                    <Row>\r\n                        <Col sm={{size: '4', offset: 8}}>\r\n                            <Button type={\"submit\"} disabled={!this.state.formIsValid} onClick={this.handleSubmit}>  Submit </Button>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                {\r\n                    this.state.errorStatus > 0 &&\r\n                    <APIResponseErrorMessage errorStatus={this.state.errorStatus} error={this.state.error}/>\r\n                }\r\n            </div>\r\n        ) ;\r\n    }\r\n}\r\n\r\nexport default PersonForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './styles/field-style.css';\r\n\r\nexport default class Field extends React.Component {\r\n    static propTypes = {\r\n        id: PropTypes.string.isRequired,\r\n        locked: PropTypes.bool,\r\n        focused: PropTypes.bool,\r\n        value: PropTypes.string,\r\n        error: PropTypes.string,\r\n        label: PropTypes.string,\r\n        onChange: PropTypes.func,\r\n    };\r\n\r\n    static defaultProps = {\r\n        locked: false,\r\n        focused: false,\r\n        value: '',\r\n        error: '',\r\n        label: '',\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            focused: (props.locked && props.focused) || false,\r\n            value: props.value || '',\r\n            error: props.error || '',\r\n            label: props.label || '',\r\n        };\r\n    }\r\n\r\n    onChange = event => {\r\n        const value = event.target.value;\r\n        this.setState({value, error: ''});\r\n        return this.props.onChange(event);\r\n    };\r\n\r\n    render() {\r\n        const {focused, value, error, label} = this.state;\r\n        const {id, locked} = this.props;\r\n        const fieldClassName = `field ${(locked ? focused : focused || value) && 'focused'} ${locked && !focused && 'locked'}`;\r\n\r\n        return (\r\n            <div className={fieldClassName}>\r\n                <input\r\n                    id={id}\r\n                    type=\"text\"\r\n                    value={value}\r\n                    placeholder={label}\r\n                    onChange={this.onChange}\r\n                    onFocus={() => !locked && this.setState({focused: true})}\r\n                    onBlur={() => !locked && this.setState({focused: false})}\r\n                />\r\n                <label htmlFor={id} className={error && 'error'}>\r\n                    {error || label}\r\n                </label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\nimport Field from \"./fields/Field\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\n\r\nclass Table extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: props.data,\r\n            columns: props.columns,\r\n            search: props.search,\r\n            filters: [],\r\n            getTrPropsFunction: props.getTrProps,\r\n            pageSize: props.pageSize || 10,\r\n        };\r\n    }\r\n\r\n    search() {\r\n\r\n    }\r\n\r\n    filter(data) {\r\n        let accepted = true;\r\n\r\n        this.state.filters.forEach(val => {\r\n            if (String(val.value) === \"\") {\r\n                accepted = true;\r\n            }\r\n\r\n            if (!String(data[val.accessor]).includes(String(val.value)) && !String(val.value).includes(String(data[val.accessor]))) {\r\n                accepted = false;\r\n            }\r\n        });\r\n\r\n        return accepted;\r\n    }\r\n\r\n    handleChange(value, index, header) {\r\n        if (this.state.filters === undefined)\r\n            this.setState({filters: []});\r\n\r\n        this.state.filters[index] = {\r\n            value: value.target.value,\r\n            accessor: header\r\n        };\r\n\r\n        this.forceUpdate();\r\n    }\r\n\r\n\r\n    getTRPropsType(state, rowInfo) {\r\n        if (rowInfo) {\r\n            return {\r\n                style: {\r\n                    textAlign: \"center\"\r\n                }\r\n            };\r\n        }\r\n        else\r\n            return {};\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        let data = this.state.data ? this.state.data.filter(data => this.filter(data)) : [];\r\n\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    {\r\n                        this.state.search.map((header, index) => {\r\n                            return (\r\n                                <Col key={index}>\r\n                                    <div >\r\n                                        <Field id={header.accessor} label={header.accessor}\r\n                                               onChange={(e) => this.handleChange(e, index, header.accessor)}/>\r\n                                    </div>\r\n                                </Col>\r\n                            )\r\n                        })\r\n                    }\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <ReactTable\r\n                            data={data}\r\n                            resolveData={data => data.map(row => row)}\r\n                            columns={this.state.columns}\r\n                            defaultPageSize={this.state.pageSize}\r\n                            getTrProps={this.getTRPropsType}\r\n                            showPagination={true}\r\n                            style={{\r\n                                height: '300px'\r\n                            }}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport Table from \"../../commons/tables/table\";\r\n\r\n\r\nconst columns = [\r\n    {\r\n        Header: 'Name',\r\n        accessor: 'name',\r\n    },\r\n    {\r\n        Header: 'Age',\r\n        accessor: 'age',\r\n    }\r\n];\r\n\r\nconst filters = [\r\n    {\r\n        accessor: 'name',\r\n    }\r\n];\r\n\r\nclass PersonTable extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tableData: this.props.tableData\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Table\r\n                data={this.state.tableData}\r\n                columns={columns}\r\n                search={filters}\r\n                pageSize={5}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default PersonTable;","import React from 'react';\r\nimport APIResponseErrorMessage from \"../commons/errorhandling/api-response-error-message\";\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    Col,\r\n    Modal,\r\n    ModalBody,\r\n    ModalHeader,\r\n    Row\r\n} from 'reactstrap';\r\nimport PersonForm from \"./components/person-form\";\r\n\r\nimport * as API_USERS from \"./api/person-api\"\r\nimport PersonTable from \"./components/person-table\";\r\n\r\n\r\n\r\nclass PersonContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggleForm = this.toggleForm.bind(this);\r\n        this.reload = this.reload.bind(this);\r\n        this.state = {\r\n            selected: false,\r\n            collapseForm: false,\r\n            tableData: [],\r\n            isLoaded: false,\r\n            errorStatus: 0,\r\n            error: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchPersons();\r\n    }\r\n\r\n    fetchPersons() {\r\n        return API_USERS.getPersons((result, status, err) => {\r\n\r\n            if (result !== null && status === 200) {\r\n                this.setState({\r\n                    tableData: result,\r\n                    isLoaded: true\r\n                });\r\n            } else {\r\n                this.setState(({\r\n                    errorStatus: status,\r\n                    error: err\r\n                }));\r\n            }\r\n        });\r\n    }\r\n\r\n    toggleForm() {\r\n        this.setState({selected: !this.state.selected});\r\n    }\r\n\r\n\r\n    reload() {\r\n        this.setState({\r\n            isLoaded: false\r\n        });\r\n        this.toggleForm();\r\n        this.fetchPersons();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <CardHeader>\r\n                    <strong> Person Management </strong>\r\n                </CardHeader>\r\n                <Card>\r\n                    <br/>\r\n                    <Row>\r\n                        <Col sm={{size: '8', offset: 1}}>\r\n                            <Button color=\"primary\" onClick={this.toggleForm}>Add Person </Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <br/>\r\n                    <Row>\r\n                        <Col sm={{size: '8', offset: 1}}>\r\n                            {this.state.isLoaded && <PersonTable tableData = {this.state.tableData}/>}\r\n                            {this.state.errorStatus > 0 && <APIResponseErrorMessage\r\n                                                            errorStatus={this.state.errorStatus}\r\n                                                            error={this.state.error}\r\n                                                        />   }\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n\r\n                <Modal isOpen={this.state.selected} toggle={this.toggleForm}\r\n                       className={this.props.className} size=\"lg\">\r\n                    <ModalHeader toggle={this.toggleForm}> Add Person: </ModalHeader>\r\n                    <ModalBody>\r\n                        <PersonForm reloadHandler={this.reload}/>\r\n                    </ModalBody>\r\n                </Modal>\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default PersonContainer;\r\n","import React from 'react'\r\nimport styles from '../styles/project-style.css';\r\n\r\nclass ErrorPage extends React.Component {\r\n\r\n    render() {\r\n            return <h3 className={styles.errorTitle}>Page not found.</h3>;\r\n    }\r\n}\r\n\r\nexport default ErrorPage\r\n","import React from 'react'\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\r\nimport NavigationBar from './navigation-bar'\r\nimport Home from './home/home';\r\nimport PersonContainer from './person/person-container'\r\n\r\nimport ErrorPage from './commons/errorhandling/error-page';\r\nimport styles from './commons/styles/project-style.css';\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={styles.back}>\r\n            <Router>\r\n                <div>\r\n                    <NavigationBar />\r\n                    <Switch>\r\n\r\n                        <Route\r\n                            exact\r\n                            path='/'\r\n                            render={() => <Home/>}\r\n                        />\r\n\r\n                        <Route\r\n                            exact\r\n                            path='/person'\r\n                            render={() => <PersonContainer/>}\r\n                        />\r\n\r\n                        {/*Error*/}\r\n                        <Route\r\n                            exact\r\n                            path='/error'\r\n                            render={() => <ErrorPage/>}\r\n                        />\r\n\r\n                        <Route render={() =><ErrorPage/>} />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './app'\r\n\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}